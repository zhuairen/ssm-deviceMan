<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hikvision.mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="com.hikvision.bean.Device">
    <id column="dev_id" jdbcType="INTEGER" property="devId" />
    <result column="dev_sn" jdbcType="VARCHAR" property="devSn" />
    <result column="dev_name" jdbcType="VARCHAR" property="devName" />
    <result column="dev_addr" jdbcType="VARCHAR" property="devAddr" />
    <result column="dev_price" jdbcType="DOUBLE" property="devPrice" />
    <result column="dev_detail" jdbcType="LONGVARCHAR" property="devDetail" />
    <result column="dev_num" jdbcType="INTEGER" property="devNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hikvision.bean.Device">
    <result column="dev_detail" jdbcType="LONGVARCHAR" property="devDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dev_id, dev_sn, dev_name, dev_addr, dev_price, dev_detail
  </sql>
  <sql id="Blob_Column_List">
    dev_detail
  </sql>
  <select id="searchDevEcharts" parameterType="java.lang.String" resultMap="BaseResultMap">
 		select DISTINCT 
 			dev_name,count(*) as dev_num
 			from device 
 		GROUP BY dev_name
  </select>
  <select id="selectOtherDev" resultMap="BaseResultMap">
  	select * from device where dev_id not in (select distinct did from psn_dev)
  </select>
  <select id="selectByExampleWithBLOBs" parameterType="com.hikvision.bean.DeviceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hikvision.bean.DeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device
    where dev_id = #{devId,jdbcType=INTEGER}
  </select>
  <delete id="delDevice" parameterType="java.util.List">
    delete from device where dev_id in (
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
  	 delete from device
    where dev_id = #{devId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hikvision.bean.DeviceExample">
    delete from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hikvision.bean.Device">
    insert into device (dev_id, dev_sn, dev_name, 
      dev_addr, dev_price, dev_detail
      )
    values (#{devId,jdbcType=INTEGER}, #{devSn,jdbcType=VARCHAR}, #{devName,jdbcType=VARCHAR}, 
      #{devAddr,jdbcType=VARCHAR}, #{devPrice,jdbcType=DOUBLE}, #{devDetail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hikvision.bean.Device">
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="devId != null">
        dev_id,
      </if>
      <if test="devSn != null">
        dev_sn,
      </if>
      <if test="devName != null">
        dev_name,
      </if>
      <if test="devAddr != null">
        dev_addr,
      </if>
      <if test="devPrice != null">
        dev_price,
      </if>
      <if test="devDetail != null">
        dev_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="devId != null">
        #{devId,jdbcType=INTEGER},
      </if>
      <if test="devSn != null">
        #{devSn,jdbcType=VARCHAR},
      </if>
      <if test="devName != null">
        #{devName,jdbcType=VARCHAR},
      </if>
      <if test="devAddr != null">
        #{devAddr,jdbcType=VARCHAR},
      </if>
      <if test="devPrice != null">
        #{devPrice,jdbcType=DOUBLE},
      </if>
      <if test="devDetail != null">
        #{devDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hikvision.bean.DeviceExample" resultType="java.lang.Long">
    select count(*) from device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device
    <set>
      <if test="record.devId != null">
        dev_id = #{record.devId,jdbcType=INTEGER},
      </if>
      <if test="record.devSn != null">
        dev_sn = #{record.devSn,jdbcType=VARCHAR},
      </if>
      <if test="record.devName != null">
        dev_name = #{record.devName,jdbcType=VARCHAR},
      </if>
      <if test="record.devAddr != null">
        dev_addr = #{record.devAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.devPrice != null">
        dev_price = #{record.devPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.devDetail != null">
        dev_detail = #{record.devDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update device
    set dev_id = #{record.devId,jdbcType=INTEGER},
      dev_sn = #{record.devSn,jdbcType=VARCHAR},
      dev_name = #{record.devName,jdbcType=VARCHAR},
      dev_addr = #{record.devAddr,jdbcType=VARCHAR},
      dev_price = #{record.devPrice,jdbcType=DOUBLE},
      dev_detail = #{record.devDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device
    set dev_id = #{record.devId,jdbcType=INTEGER},
      dev_sn = #{record.devSn,jdbcType=VARCHAR},
      dev_name = #{record.devName,jdbcType=VARCHAR},
      dev_addr = #{record.devAddr,jdbcType=VARCHAR},
      dev_price = #{record.devPrice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hikvision.bean.Device">
    update device
    <set>
      <if test="devSn != null">
        dev_sn = #{devSn,jdbcType=VARCHAR},
      </if>
      <if test="devName != null">
        dev_name = #{devName,jdbcType=VARCHAR},
      </if>
      <if test="devAddr != null">
        dev_addr = #{devAddr,jdbcType=VARCHAR},
      </if>
      <if test="devPrice != null">
        dev_price = #{devPrice,jdbcType=DOUBLE},
      </if>
      <if test="devDetail != null">
        dev_detail = #{devDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where dev_id = #{devId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hikvision.bean.Device">
    update device
    set dev_sn = #{devSn,jdbcType=VARCHAR},
      dev_name = #{devName,jdbcType=VARCHAR},
      dev_addr = #{devAddr,jdbcType=VARCHAR},
      dev_price = #{devPrice,jdbcType=DOUBLE},
      dev_detail = #{devDetail,jdbcType=LONGVARCHAR}
    where dev_id = #{devId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hikvision.bean.Device">
    update device
    set dev_sn = #{devSn,jdbcType=VARCHAR},
      dev_name = #{devName,jdbcType=VARCHAR},
      dev_addr = #{devAddr,jdbcType=VARCHAR},
      dev_price = #{devPrice,jdbcType=DOUBLE}
    where dev_id = #{devId,jdbcType=INTEGER}
  </update>
</mapper>